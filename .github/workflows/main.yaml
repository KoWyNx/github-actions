name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:5.0-alpine3.10
        ports:
          - 6379:6379

      postgres:
        image: postgres:9.4
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Flask app
        uses: docker/build-push-action@v2
        with:
          context: ./vote
          file: ./vote/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:latest

      - name: Build and push Node.js app
        uses: docker/build-push-action@v2
        with:
          context: ./result
          file: ./result/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/node-app:latest

      - name: Build and push Worker app
        uses: docker/build-push-action@v2
        with:
          context: ./worker
          file: ./worker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/worker-app:latest
